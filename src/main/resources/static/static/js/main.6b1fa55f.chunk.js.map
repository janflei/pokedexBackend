{"version":3,"sources":["PokeTable.js","HistoryTable.js","Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["PokeTable","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","classes","react_default","a","createElement","style","display","justifyContent","marginTop","Paper_default","className","root","width","Table_default","table","TableHead_default","TableBody_default","TableRow_default","TableCell_default","align","src","imageurl","alt","id","name","baseexp","height","order","weight","types","join","React","Component","withStyles","HistoryTable","number","listItems","history","map","index","toUpperCase","color","Dashboard","handleDrawerOpen","setState","open","handleDrawerClose","handleChange","event","res","target","value","toLowerCase","pokemonsearchname","handleSubmit","axios","get","then","pokemon","data","n","showPokeResult","showpoketable","console","log","getHistory","handleClickPokedex","handleClickHistory","bind","assertThisInitialized","_this2","CssBaseline_default","AppBar_default","position","classNames","appBar","appBarShift","Toolbar_default","disableGutters","toolbar","IconButton_default","aria-label","onClick","menuButton","menuButtonHidden","Menu_default","Typography_default","component","variant","noWrap","title","Drawer_default","paper","drawerPaper","drawerPaperClose","toolbarIcon","ChevronLeft_default","Divider_default","List_default","ListItem_default","button","ListItemIcon_default","Dashboard_default","ListItemText_default","primary","BarChart_default","content","appBarSpacer","TextField_default","label","textField","onChange","fullWidth","onKeyPress","key","margin","src_PokeTable","src_HistoryTable","theme","paddingRight","objectSpread","alignItems","padding","mixins","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","concat","enteringScreen","marginRight","flexGrow","whiteSpace","defineProperty","overflowX","spacing","unit","breakpoints","up","overflow","chartContainer","tableContainer","h5","marginBottom","createMuiTheme","palette","deepOrange","secondary","lightBlack","App","core_styles","src_Dashboard","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6b1fa55f.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst styles = {\r\n};\r\n\r\nclass PokeTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n    };\r\n   }\r\n\r\n   render() {\r\n    const { classes } = this.props;\r\n    var divStyle = {\r\n      width: '50%',\r\n    };\r\n\r\n   return (\r\n    <div style={{display: 'flex', justifyContent: 'center', marginTop: '50px'}}>\r\n          <Paper className={classes.root} style={divStyle}>\r\n            <Table className={classes.table}>\r\n              <TableHead>\r\n              </TableHead>\r\n              <TableBody>\r\n                  <TableRow>\r\n                    <TableCell>Image: </TableCell>\r\n                    <TableCell align={\"center\"}>\r\n                        <img src={this.props.imageurl} alt=\"new\"/>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell>Name: </TableCell>\r\n                    <TableCell align={\"center\"} id={\"pokename\"}>{this.props.name}</TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell>Base Experience: </TableCell>\r\n                    <TableCell align={\"center\"}>{this.props.baseexp}</TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell>Height: </TableCell>\r\n                    <TableCell align={\"center\"}>{this.props.height}</TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell>Order: </TableCell>\r\n                    <TableCell align={\"center\"}>{this.props.order}</TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell>Weight: </TableCell>\r\n                    <TableCell align={\"center\"}>{this.props.weight}</TableCell>\r\n                  </TableRow>  \r\n                  <TableRow>\r\n                    <TableCell>Types: </TableCell>\r\n                    <TableCell align={\"center\"}>{this.props.types.join(', ')}</TableCell>\r\n                  </TableRow>         \r\n              </TableBody>\r\n            </Table>\r\n          </Paper>\r\n    </div>\r\n  );\r\n}}\r\n\r\nPokeTable.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PokeTable);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\nclass HistoryTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            number: 0,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        var divStyle = {\r\n            width: '50%',\r\n        };\r\n        var listItems = [];\r\n\r\n        if (this.props.history) {\r\n            listItems = this.props.history.map((history, index) =>\r\n                <TableRow>\r\n                    <TableCell align={\"center\"}>\r\n                        <img src={history.imageurl} alt=\"new\" />\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"}>{history.name.toUpperCase()}</TableCell>\r\n                </TableRow>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div style={{ display: 'flex', justifyContent: 'center', marginTop: '50px' }}>\r\n                <Paper className={classes.root} style={divStyle}>\r\n                    <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                    <h3 style={{ color: 'gray', align: 'center' }}>{\"History\"}</h3>\r\n                    </div>\r\n                <Table className={classes.table}>\r\n                    <TableHead>\r\n                        <TableCell align={\"center\"}>{\"Image\"}</TableCell>\r\n                        <TableCell align={\"center\"}>{\"Name\"}</TableCell>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {listItems}\r\n                    </TableBody>\r\n                </Table>\r\n                </Paper>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nHistoryTable.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles()(HistoryTable);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport BarChartIcon from '@material-ui/icons/BarChart';\r\nimport axios from \"axios\";\r\nimport PokeTable from './PokeTable';\r\nimport HistoryTable from './HistoryTable';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginLeft: 12,\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing.unit * 7,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing.unit * 9,\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing.unit * 3,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  chartContainer: {\r\n    marginLeft: -22,\r\n  },\r\n  tableContainer: {\r\n    height: 320,\r\n  },\r\n  h5: {\r\n    marginBottom: theme.spacing.unit * 2,\r\n  },\r\n});\r\n\r\nclass Dashboard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleClickHistory = this.handleClickHistory.bind(this)\r\n    this.handleClickPokedex = this.handleClickPokedex.bind(this)\r\n\r\n    this.state = {\r\n      open: true,\r\n      pokemonsearchname: \"\",\r\n      name: \"\",\r\n      types: [],\r\n      imageurl: \"\",\r\n      baseexp: \"\",\r\n      order: \"\",\r\n      weight: \"\",\r\n      showpoketable: false,\r\n      showPokeResult: true,\r\n      history: [],\r\n    };\r\n  }\r\n\r\n  handleDrawerOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleDrawerClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    var str = event.target.value;\r\n    var res = str.toLowerCase();\r\n    this.setState({ pokemonsearchname: res });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    axios.get('https://mega-pokedex.herokuapp.com/pokemon?token=' + this.state.pokemonsearchname)\r\n      .then(res => {\r\n        const pokemon = res.data;\r\n\r\n        var str = pokemon.name;\r\n        var n = str.toUpperCase();\r\n        this.setState({ name: n });\r\n\r\n        this.setState({ types: pokemon.types });\r\n        this.setState({ imageurl: pokemon.imageurl });\r\n        this.setState({ baseexp: pokemon.baseexp });\r\n        this.setState({ height: pokemon.height });\r\n        this.setState({ order: pokemon.order });\r\n        this.setState({ weight: pokemon.weight });\r\n\r\n        this.setState({ showPokeResult: true });\r\n        this.setState({ showpoketable: true });\r\n        console.log(pokemon);\r\n      })\r\n  };\r\n\r\n  getHistory = (event) => {\r\n    axios.get('https://mega-pokedex.herokuapp.com/history')\r\n      .then(res => {\r\n        const history = res.data;\r\n        this.setState({ history: history });\r\n        console.log(history);\r\n      })\r\n  };\r\n\r\n  handleClickPokedex = () => {\r\n    this.setState({ showPokeResult: true });\r\n  }\r\n\r\n  handleClickHistory = () => {\r\n    this.setState({ showPokeResult: false });\r\n    this.getHistory();\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('Test');\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar\r\n          position=\"absolute\"\r\n          className={classNames(classes.appBar, this.state.open && classes.appBarShift)}\r\n        >\r\n          <Toolbar disableGutters={!this.state.open} className={classes.toolbar}>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"Open drawer\"\r\n              onClick={this.handleDrawerOpen}\r\n              className={classNames(\r\n                classes.menuButton,\r\n                this.state.open && classes.menuButtonHidden,\r\n              )}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography\r\n              component=\"h1\"\r\n              variant=\"h6\"\r\n              color=\"inherit\"\r\n              noWrap\r\n              className={classes.title}\r\n            >\r\n              Pokedex\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          classes={{\r\n            paper: classNames(classes.drawerPaper, !this.state.open && classes.drawerPaperClose),\r\n          }}\r\n          open={this.state.open}\r\n        >\r\n          <div className={classes.toolbarIcon}>\r\n            <IconButton onClick={this.handleDrawerClose}>\r\n              <ChevronLeftIcon />\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <List>\r\n            <ListItem button onClick={this.handleClickPokedex}>\r\n              <ListItemIcon>\r\n                <DashboardIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Pokedex\" />\r\n            </ListItem>\r\n            <ListItem button onClick={this.handleClickHistory}>\r\n              <ListItemIcon>\r\n                <BarChartIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"History\" />\r\n            </ListItem>\r\n          </List>\r\n          <Divider />\r\n        </Drawer>\r\n        <main className={classes.content}>\r\n          <div className={classes.appBarSpacer} />\r\n          <TextField\r\n            id=\"filled-name\"\r\n            label=\"Search Pokemon by Name or Number\"\r\n            className={classes.textField}\r\n            value={this.state.pokemonsearchname}\r\n            onChange={this.handleChange}\r\n            fullWidth\r\n            onKeyPress={event => {\r\n              if (event.key === 'Enter') {\r\n                this.handleSubmit()\r\n              }\r\n            }}\r\n            margin=\"normal\"\r\n            variant=\"filled\"\r\n          />\r\n          {this.state.showPokeResult ?\r\n            <div>\r\n              {this.state.showpoketable ?\r\n                <PokeTable\r\n                  name={this.state.name}\r\n                  types={this.state.types}\r\n                  imageurl={this.state.imageurl}\r\n                  baseexp={this.state.baseexp}\r\n                  height={this.state.height}\r\n                  order={this.state.order}\r\n                  weight={this.state.weight}\r\n                >\r\n                </PokeTable>\r\n                : null}\r\n            </div>\r\n            : <HistoryTable history={this.state.history}></HistoryTable>}\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Dashboard);","import React from 'react';\nimport Dashboard from './Dashboard';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { lightBlack, deepOrange } from '@material-ui/core/colors';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: deepOrange,\n    secondary: lightBlack,\n  },\n});\n\nfunction App() {\n  return (\n    <MuiThemeProvider theme={theme}>\n      <Dashboard></Dashboard>\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}