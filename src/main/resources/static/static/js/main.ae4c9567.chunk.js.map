{"version":3,"sources":["listItems.js","PokeTable.js","Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["mainListItems","react_default","a","createElement","ListItem_default","button","ListItemIcon_default","Dashboard_default","ListItemText_default","primary","BarChart_default","secondaryListItems","PokeTable","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","classes","style","display","justifyContent","marginTop","Paper_default","className","root","width","Table_default","table","TableHead_default","TableBody_default","TableRow_default","TableCell_default","align","src","imageurl","alt","pokemon","name","base_experience","height","order","weight","React","Component","withStyles","Dashboard","handleDrawerOpen","setState","open","handleDrawerClose","handleChange","event","res","target","value","toLowerCase","pokemonsearchname","handleSubmit","axios","get","then","data","sprites","n","toUpperCase","pokeb","console","log","_this2","CssBaseline_default","AppBar_default","position","classNames","appBar","appBarShift","Toolbar_default","disableGutters","toolbar","IconButton_default","color","aria-label","onClick","menuButton","menuButtonHidden","Menu_default","Typography_default","component","variant","noWrap","title","Drawer_default","paper","drawerPaper","drawerPaperClose","toolbarIcon","ChevronLeft_default","Divider_default","List_default","content","appBarSpacer","TextField_default","id","label","textField","onChange","fullWidth","onKeyPress","key","margin","src_PokeTable","theme","paddingRight","objectSpread","alignItems","padding","mixins","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","concat","enteringScreen","marginRight","flexGrow","whiteSpace","defineProperty","overflowX","spacing","unit","breakpoints","up","overflow","chartContainer","tableContainer","h5","marginBottom","createMuiTheme","palette","deepOrange","secondary","lightBlack","App","core_styles","src_Dashboard","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ae4c9567.chunk.js","sourcesContent":["import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport BarChartIcon from '@material-ui/icons/BarChart';\r\nimport LayersIcon from '@material-ui/icons/Layers';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\n\r\nexport const mainListItems = (\r\n  <div>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <DashboardIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Pokedex\" />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <BarChartIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"History\" />\r\n    </ListItem>\r\n  </div>\r\n);\r\n\r\nexport const secondaryListItems = (\r\n  <div>\r\n    {/*\r\n    <ListSubheader inset>Saved reports</ListSubheader>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <AssignmentIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Current month\" />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <AssignmentIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Last quarter\" />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <AssignmentIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Year-end sale\" />\r\n    </ListItem>\r\n    */}\r\n  </div>\r\n);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst styles = {\r\n};\r\n\r\nclass PokeTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n    };\r\n   }\r\n\r\n   render() {\r\n    const { classes } = this.props;\r\n    var divStyle = {\r\n      width: '50%',\r\n    };\r\n\r\n   return (\r\n    <div style={{display: 'flex', justifyContent: 'center', marginTop: '50px'}}>\r\n          <Paper className={classes.root} style={divStyle}>\r\n            <Table className={classes.table}>\r\n              <TableHead>\r\n              </TableHead>\r\n              <TableBody>\r\n                  <TableRow>\r\n                    <TableCell>Image: </TableCell>\r\n                    <TableCell align={\"center\"}>\r\n                        <img src={this.props.imageurl} alt=\"new\"/>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell>Name: </TableCell>\r\n                    <TableCell align={\"center\"}>{this.props.pokemon.name}</TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell>Base Experience: </TableCell>\r\n                    <TableCell align={\"center\"}>{this.props.pokemon.base_experience}</TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell>Height: </TableCell>\r\n                    <TableCell align={\"center\"}>{this.props.pokemon.height}</TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell>Order: </TableCell>\r\n                    <TableCell align={\"center\"}>{this.props.pokemon.order}</TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell>Weight: </TableCell>\r\n                    <TableCell align={\"center\"}>{this.props.pokemon.weight}</TableCell>\r\n                  </TableRow>          \r\n              </TableBody>\r\n            </Table>\r\n          </Paper>\r\n    </div>\r\n  );\r\n}}\r\n\r\nPokeTable.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(PokeTable);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { mainListItems, secondaryListItems } from './listItems';\r\nimport axios from \"axios\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport PokeTable from './PokeTable';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginLeft: 12,\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing.unit * 7,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing.unit * 9,\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing.unit * 3,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  chartContainer: {\r\n    marginLeft: -22,\r\n  },\r\n  tableContainer: {\r\n    height: 320,\r\n  },\r\n  h5: {\r\n    marginBottom: theme.spacing.unit * 2,\r\n  },\r\n});\r\n\r\nclass Dashboard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      open: true,\r\n      pokemon: [],\r\n      pokemonsearchname: \"\",\r\n      imageurl: \"\",\r\n      name: \"\",\r\n      pokeb: false,\r\n    };\r\n   }\r\n  \r\n  handleDrawerOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleDrawerClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  handleChange  = (event) => {\r\n    var str = event.target.value;\r\n    var res = str.toLowerCase();\r\n      this.setState({pokemonsearchname: res});\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n      axios.get('https://pokeapi.co/api/v2/pokemon/' + this.state.pokemonsearchname + '/')\r\n      .then(res => {\r\n        const pokemon = res.data;\r\n        this.setState({pokemon: pokemon });\r\n        this.setState({imageurl: pokemon.sprites[\"front_default\"]});\r\n        var str = pokemon.name;\r\n        var n = str.toUpperCase();\r\n        this.setState({name: n});\r\n        this.setState({pokeb: true});\r\n      })    \r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log('Test');\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    var divStyle = {\r\n      width: '50%',\r\n    };\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar\r\n          position=\"absolute\"\r\n          className={classNames(classes.appBar, this.state.open && classes.appBarShift)}\r\n        >\r\n          <Toolbar disableGutters={!this.state.open} className={classes.toolbar}>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"Open drawer\"\r\n              onClick={this.handleDrawerOpen}\r\n              className={classNames(\r\n                classes.menuButton,\r\n                this.state.open && classes.menuButtonHidden,\r\n              )}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography\r\n              component=\"h1\"\r\n              variant=\"h6\"\r\n              color=\"inherit\"\r\n              noWrap\r\n              className={classes.title}\r\n            >\r\n              Pokedex\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          classes={{\r\n            paper: classNames(classes.drawerPaper, !this.state.open && classes.drawerPaperClose),\r\n          }}\r\n          open={this.state.open}\r\n        >\r\n          <div className={classes.toolbarIcon}>\r\n            <IconButton onClick={this.handleDrawerClose}>\r\n              <ChevronLeftIcon />\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <List>{mainListItems}</List>\r\n          <Divider />\r\n          <List>{secondaryListItems}</List>\r\n        </Drawer>\r\n        <main className={classes.content}>\r\n          <div className={classes.appBarSpacer} />\r\n          <TextField\r\n          id=\"filled-name\"\r\n          label=\"Search Pokemon by Name or Number\"\r\n          className={classes.textField}\r\n          value={this.state.pokemonsearchname}\r\n          onChange={this.handleChange}\r\n          fullWidth\r\n          onKeyPress={event => {\r\n            if (event.key === 'Enter') {\r\n              this.handleSubmit()\r\n            }\r\n          }}\r\n          margin=\"normal\"\r\n          variant=\"filled\"\r\n        />\r\n        {this.state.pokeb ?\r\n        <PokeTable pokemon={this.state.pokemon} imageurl={this.state.imageurl} name={this.state.name}></PokeTable>\r\n    : null }\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Dashboard);","import React from 'react';\nimport Dashboard from './Dashboard';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { lightBlack, deepOrange } from '@material-ui/core/colors';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: deepOrange,\n    secondary: lightBlack,\n  },\n});\n\nfunction App() {\n  return (\n    <MuiThemeProvider theme={theme}>\n      <Dashboard></Dashboard>\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}